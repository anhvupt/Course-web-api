// <auto-generated />
using System;
using CourseWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWebAPI.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20210114183022_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseCredit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseCredit = 1879190428,
                            DepartmentID = 5,
                            Title = "Modi explicabo esse deserunt."
                        },
                        new
                        {
                            ID = 2,
                            CourseCredit = 330453738,
                            DepartmentID = 5,
                            Title = "Voluptatum magnam perspiciatis aliquam consequatur."
                        },
                        new
                        {
                            ID = 3,
                            CourseCredit = -230306062,
                            DepartmentID = 4,
                            Title = "Sunt eos suscipit qui rerum delectus dolores."
                        },
                        new
                        {
                            ID = 4,
                            CourseCredit = 1730633285,
                            DepartmentID = 4,
                            Title = "Explicabo et magni vel consequatur."
                        },
                        new
                        {
                            ID = 5,
                            CourseCredit = 1372973033,
                            DepartmentID = 3,
                            Title = "Cupiditate facere tenetur voluptatem vero quis officia illum delectus."
                        },
                        new
                        {
                            ID = 6,
                            CourseCredit = -2870778,
                            DepartmentID = 3,
                            Title = "Est dolorem ipsam illum."
                        },
                        new
                        {
                            ID = 7,
                            CourseCredit = -115095350,
                            DepartmentID = 2,
                            Title = "Blanditiis ea iste reiciendis sequi cum ipsam."
                        },
                        new
                        {
                            ID = 8,
                            CourseCredit = 1594434981,
                            DepartmentID = 2,
                            Title = "Qui qui officia aperiam doloremque facilis rerum dolores."
                        },
                        new
                        {
                            ID = 9,
                            CourseCredit = -1872343641,
                            DepartmentID = 1,
                            Title = "Laudantium sit cum perspiciatis."
                        },
                        new
                        {
                            ID = 10,
                            CourseCredit = 186760381,
                            DepartmentID = 1,
                            Title = "Nesciunt architecto quia asperiores."
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 9,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 10,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Budget = 2011064282.0,
                            InstructorID = 1,
                            Name = "Mrs. Mellie Labadie",
                            StartDate = new DateTime(2021, 1, 15, 1, 30, 21, 790, DateTimeKind.Local).AddTicks(9309)
                        },
                        new
                        {
                            DepartmentID = 2,
                            Budget = -543478924.0,
                            InstructorID = 2,
                            Name = "Bertha Schiller",
                            StartDate = new DateTime(2021, 1, 15, 1, 30, 21, 792, DateTimeKind.Local).AddTicks(1037)
                        },
                        new
                        {
                            DepartmentID = 3,
                            Budget = -597151893.0,
                            InstructorID = 3,
                            Name = "Louie Brekke",
                            StartDate = new DateTime(2021, 1, 15, 1, 30, 21, 792, DateTimeKind.Local).AddTicks(4995)
                        },
                        new
                        {
                            DepartmentID = 4,
                            Budget = 1083842602.0,
                            InstructorID = 4,
                            Name = "Margie Connelly",
                            StartDate = new DateTime(2021, 1, 15, 1, 30, 21, 792, DateTimeKind.Local).AddTicks(7606)
                        },
                        new
                        {
                            DepartmentID = 5,
                            Budget = -619048428.0,
                            InstructorID = 5,
                            Name = "Florence Weimann",
                            StartDate = new DateTime(2021, 1, 15, 1, 30, 21, 793, DateTimeKind.Local).AddTicks(39)
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = "C",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 4,
                            Grade = "A",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 5,
                            Grade = "A",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseID = 6,
                            Grade = "None",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseID = 7,
                            Grade = "D",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseID = 8,
                            Grade = "C",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseID = 9,
                            Grade = "B",
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseID = 10,
                            Grade = "A",
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FistMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FistMidName = "Trey",
                            HireDate = new DateTime(2021, 1, 15, 1, 30, 21, 780, DateTimeKind.Local).AddTicks(2597),
                            LastName = "Renner"
                        },
                        new
                        {
                            ID = 2,
                            FistMidName = "Irving",
                            HireDate = new DateTime(2021, 1, 15, 1, 30, 21, 781, DateTimeKind.Local).AddTicks(4628),
                            LastName = "Von"
                        },
                        new
                        {
                            ID = 3,
                            FistMidName = "Marshall",
                            HireDate = new DateTime(2021, 1, 15, 1, 30, 21, 781, DateTimeKind.Local).AddTicks(6352),
                            LastName = "Cormier"
                        },
                        new
                        {
                            ID = 4,
                            FistMidName = "Norma",
                            HireDate = new DateTime(2021, 1, 15, 1, 30, 21, 781, DateTimeKind.Local).AddTicks(8614),
                            LastName = "Bernhard"
                        },
                        new
                        {
                            ID = 5,
                            FistMidName = "Zachary",
                            HireDate = new DateTime(2021, 1, 15, 1, 30, 21, 782, DateTimeKind.Local).AddTicks(577),
                            LastName = "Nienow"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(1952, 2, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Rhoda",
                            LastName = "Renner"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(1992, 8, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Winfield",
                            LastName = "Boyer"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(1959, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Brisa",
                            LastName = "Reinger"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(2007, 4, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Jackeline",
                            LastName = "Hodkiewicz"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(2017, 8, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Ashley",
                            LastName = "Bergnaum"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Administator")
                        .WithMany()
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administator");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("CourseWebAPI.Entities.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
