// <auto-generated />
using System;
using CourseWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWebAPI.Migrations
{
    [DbContext(typeof(CourseContext))]
    partial class CourseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseCredit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseCredit = 862109254,
                            DepartmentID = 5,
                            Title = "Doloremque eligendi quas quod ducimus neque neque quia ab sit."
                        },
                        new
                        {
                            ID = 2,
                            CourseCredit = -2043066793,
                            DepartmentID = 5,
                            Title = "Accusamus rem nihil aperiam labore."
                        },
                        new
                        {
                            ID = 3,
                            CourseCredit = -823397902,
                            DepartmentID = 4,
                            Title = "Dolorum rerum adipisci alias odit."
                        },
                        new
                        {
                            ID = 4,
                            CourseCredit = -2057239761,
                            DepartmentID = 4,
                            Title = "Ipsam velit quis maxime porro praesentium cum."
                        },
                        new
                        {
                            ID = 5,
                            CourseCredit = -105182209,
                            DepartmentID = 3,
                            Title = "Natus illum ipsum est."
                        },
                        new
                        {
                            ID = 6,
                            CourseCredit = -366597290,
                            DepartmentID = 3,
                            Title = "Libero ipsum voluptates rerum vel ratione."
                        },
                        new
                        {
                            ID = 7,
                            CourseCredit = 412734277,
                            DepartmentID = 2,
                            Title = "Voluptates sint repellendus eos eum excepturi voluptas."
                        },
                        new
                        {
                            ID = 8,
                            CourseCredit = 1886547216,
                            DepartmentID = 2,
                            Title = "Impedit incidunt ut perspiciatis reprehenderit."
                        },
                        new
                        {
                            ID = 9,
                            CourseCredit = -1526750892,
                            DepartmentID = 1,
                            Title = "Id at laudantium maxime ut delectus in autem quae."
                        },
                        new
                        {
                            ID = 10,
                            CourseCredit = 2003657334,
                            DepartmentID = 1,
                            Title = "Commodi molestiae quia similique dolores."
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 9,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 10,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Budget = -1762195451.0,
                            InstructorID = 1,
                            Name = "Elliot Fay I",
                            StartDate = new DateTime(2021, 1, 16, 19, 32, 19, 225, DateTimeKind.Local).AddTicks(3783)
                        },
                        new
                        {
                            DepartmentID = 2,
                            Budget = 629826614.0,
                            InstructorID = 2,
                            Name = "Ahmed Torp",
                            StartDate = new DateTime(2021, 1, 16, 19, 32, 19, 225, DateTimeKind.Local).AddTicks(7725)
                        },
                        new
                        {
                            DepartmentID = 3,
                            Budget = 1157944999.0,
                            InstructorID = 3,
                            Name = "Ari Bayer",
                            StartDate = new DateTime(2021, 1, 16, 19, 32, 19, 225, DateTimeKind.Local).AddTicks(9246)
                        },
                        new
                        {
                            DepartmentID = 4,
                            Budget = -1256002872.0,
                            InstructorID = 4,
                            Name = "Ted Skiles",
                            StartDate = new DateTime(2021, 1, 16, 19, 32, 19, 226, DateTimeKind.Local).AddTicks(513)
                        },
                        new
                        {
                            DepartmentID = 5,
                            Budget = -1469120133.0,
                            InstructorID = 5,
                            Name = "Grace Stroman",
                            StartDate = new DateTime(2021, 1, 16, 19, 32, 19, 226, DateTimeKind.Local).AddTicks(2518)
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = "C",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 4,
                            Grade = "A",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 5,
                            Grade = "A",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseID = 6,
                            Grade = "None",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseID = 7,
                            Grade = "D",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseID = 8,
                            Grade = "C",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseID = 9,
                            Grade = "B",
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseID = 10,
                            Grade = "A",
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "Bertrand",
                            HireDate = new DateTime(2021, 1, 16, 19, 32, 19, 213, DateTimeKind.Local).AddTicks(6354),
                            LastName = "Cartwright"
                        },
                        new
                        {
                            ID = 2,
                            FirstMidName = "Dock",
                            HireDate = new DateTime(2021, 1, 16, 19, 32, 19, 215, DateTimeKind.Local).AddTicks(9674),
                            LastName = "Gutkowski"
                        },
                        new
                        {
                            ID = 3,
                            FirstMidName = "Kelly",
                            HireDate = new DateTime(2021, 1, 16, 19, 32, 19, 216, DateTimeKind.Local).AddTicks(1506),
                            LastName = "Powlowski"
                        },
                        new
                        {
                            ID = 4,
                            FirstMidName = "Bradford",
                            HireDate = new DateTime(2021, 1, 16, 19, 32, 19, 216, DateTimeKind.Local).AddTicks(2800),
                            LastName = "Hoeger"
                        },
                        new
                        {
                            ID = 5,
                            FirstMidName = "Lula",
                            HireDate = new DateTime(2021, 1, 16, 19, 32, 19, 216, DateTimeKind.Local).AddTicks(4198),
                            LastName = "Williamson"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(2007, 10, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Erika",
                            LastName = "Crooks"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(1906, 3, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Kailee",
                            LastName = "Haley"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(1988, 8, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Marc",
                            LastName = "Goldner"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(1959, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Emie",
                            LastName = "Kertzmann"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(1951, 3, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Abner",
                            LastName = "Moore"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Administator")
                        .WithMany()
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administator");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("CourseWebAPI.Entities.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
