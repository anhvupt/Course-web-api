// <auto-generated />
using System;
using CourseWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWebAPI.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20210115103439_EditInstructorFirstMidNameField")]
    partial class EditInstructorFirstMidNameField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseCredit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseCredit = -970489978,
                            DepartmentID = 5,
                            Title = "Rerum exercitationem quo aliquid ut."
                        },
                        new
                        {
                            ID = 2,
                            CourseCredit = 333205708,
                            DepartmentID = 5,
                            Title = "Velit voluptas deleniti nulla voluptas possimus blanditiis."
                        },
                        new
                        {
                            ID = 3,
                            CourseCredit = -1240201731,
                            DepartmentID = 4,
                            Title = "Ullam et debitis et molestias dolore aut sit."
                        },
                        new
                        {
                            ID = 4,
                            CourseCredit = 1911597613,
                            DepartmentID = 4,
                            Title = "Mollitia libero nihil magni rem accusantium delectus soluta error maxime."
                        },
                        new
                        {
                            ID = 5,
                            CourseCredit = 1723372158,
                            DepartmentID = 3,
                            Title = "Et rerum cumque rerum at magni."
                        },
                        new
                        {
                            ID = 6,
                            CourseCredit = -593422525,
                            DepartmentID = 3,
                            Title = "Ipsum asperiores quaerat repellat veritatis quisquam tenetur aut tenetur fugit."
                        },
                        new
                        {
                            ID = 7,
                            CourseCredit = -1003881047,
                            DepartmentID = 2,
                            Title = "Tempore debitis dolor vitae blanditiis reiciendis voluptatem ea rerum."
                        },
                        new
                        {
                            ID = 8,
                            CourseCredit = 3396166,
                            DepartmentID = 2,
                            Title = "Dolorum molestiae doloribus illo et aut ut dolorem deleniti."
                        },
                        new
                        {
                            ID = 9,
                            CourseCredit = -1100486295,
                            DepartmentID = 1,
                            Title = "Illum corporis nisi commodi repudiandae beatae."
                        },
                        new
                        {
                            ID = 10,
                            CourseCredit = 1146623472,
                            DepartmentID = 1,
                            Title = "Veritatis est est harum ipsam accusamus architecto aperiam dicta voluptatibus."
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 9,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 10,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Budget = -1533183605.0,
                            InstructorID = 1,
                            Name = "Nikki Okuneva",
                            StartDate = new DateTime(2021, 1, 15, 17, 34, 38, 244, DateTimeKind.Local).AddTicks(7768)
                        },
                        new
                        {
                            DepartmentID = 2,
                            Budget = 861049257.0,
                            InstructorID = 2,
                            Name = "Tommie Hoppe",
                            StartDate = new DateTime(2021, 1, 15, 17, 34, 38, 245, DateTimeKind.Local).AddTicks(1041)
                        },
                        new
                        {
                            DepartmentID = 3,
                            Budget = -1091453409.0,
                            InstructorID = 3,
                            Name = "Edwina Rath",
                            StartDate = new DateTime(2021, 1, 15, 17, 34, 38, 245, DateTimeKind.Local).AddTicks(2326)
                        },
                        new
                        {
                            DepartmentID = 4,
                            Budget = 603782830.0,
                            InstructorID = 4,
                            Name = "Mrs. Adan Nikolaus",
                            StartDate = new DateTime(2021, 1, 15, 17, 34, 38, 245, DateTimeKind.Local).AddTicks(5820)
                        },
                        new
                        {
                            DepartmentID = 5,
                            Budget = 1379971421.0,
                            InstructorID = 5,
                            Name = "Josephine Skiles",
                            StartDate = new DateTime(2021, 1, 15, 17, 34, 38, 245, DateTimeKind.Local).AddTicks(7724)
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = "C",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 4,
                            Grade = "A",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 5,
                            Grade = "A",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseID = 6,
                            Grade = "None",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseID = 7,
                            Grade = "D",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseID = 8,
                            Grade = "C",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseID = 9,
                            Grade = "B",
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseID = 10,
                            Grade = "A",
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "Jude",
                            HireDate = new DateTime(2021, 1, 15, 17, 34, 38, 233, DateTimeKind.Local).AddTicks(9488),
                            LastName = "Morar"
                        },
                        new
                        {
                            ID = 2,
                            FirstMidName = "Delores",
                            HireDate = new DateTime(2021, 1, 15, 17, 34, 38, 235, DateTimeKind.Local).AddTicks(2216),
                            LastName = "Larkin"
                        },
                        new
                        {
                            ID = 3,
                            FirstMidName = "Catharine",
                            HireDate = new DateTime(2021, 1, 15, 17, 34, 38, 235, DateTimeKind.Local).AddTicks(4551),
                            LastName = "Hoeger"
                        },
                        new
                        {
                            ID = 4,
                            FirstMidName = "Hertha",
                            HireDate = new DateTime(2021, 1, 15, 17, 34, 38, 235, DateTimeKind.Local).AddTicks(6710),
                            LastName = "Streich"
                        },
                        new
                        {
                            ID = 5,
                            FirstMidName = "Ernie",
                            HireDate = new DateTime(2021, 1, 15, 17, 34, 38, 235, DateTimeKind.Local).AddTicks(8178),
                            LastName = "Littel"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(2003, 11, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Sharon",
                            LastName = "Raynor"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(1997, 5, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Araceli",
                            LastName = "Jewess"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(1907, 2, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Opal",
                            LastName = "Gutmann"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(1995, 8, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Linda",
                            LastName = "Champlin"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(1973, 11, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Devin",
                            LastName = "Gerhold"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Administator")
                        .WithMany()
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administator");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("CourseWebAPI.Entities.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
