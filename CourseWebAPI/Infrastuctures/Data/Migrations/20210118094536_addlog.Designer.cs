// <auto-generated />
using System;
using CourseWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWebAPI.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20210118094536_addlog")]
    partial class addlog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseCredit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseCredit = -246361408,
                            DepartmentID = 5,
                            Title = "Nam quo natus at dolorum necessitatibus eligendi suscipit nemo natus."
                        },
                        new
                        {
                            ID = 2,
                            CourseCredit = 1736100980,
                            DepartmentID = 5,
                            Title = "Quibusdam perspiciatis porro sed voluptatem minima eaque quisquam et sed."
                        },
                        new
                        {
                            ID = 3,
                            CourseCredit = 1489336281,
                            DepartmentID = 4,
                            Title = "Deleniti quam ad libero et temporibus voluptate."
                        },
                        new
                        {
                            ID = 4,
                            CourseCredit = -541364165,
                            DepartmentID = 4,
                            Title = "Neque accusamus voluptatum sed fugit."
                        },
                        new
                        {
                            ID = 5,
                            CourseCredit = 754168129,
                            DepartmentID = 3,
                            Title = "Rem illo quaerat et magnam sed recusandae est illo ut."
                        },
                        new
                        {
                            ID = 6,
                            CourseCredit = 561997649,
                            DepartmentID = 3,
                            Title = "Ullam fugit eligendi placeat consequatur est omnis aliquid."
                        },
                        new
                        {
                            ID = 7,
                            CourseCredit = -1418258620,
                            DepartmentID = 2,
                            Title = "Et ut et nihil sint aliquam."
                        },
                        new
                        {
                            ID = 8,
                            CourseCredit = 273785256,
                            DepartmentID = 2,
                            Title = "Expedita deserunt neque expedita repudiandae illo non est ut nostrum."
                        },
                        new
                        {
                            ID = 9,
                            CourseCredit = 1155689554,
                            DepartmentID = 1,
                            Title = "Illum tempore sed odio cupiditate."
                        },
                        new
                        {
                            ID = 10,
                            CourseCredit = 1404583682,
                            DepartmentID = 1,
                            Title = "Consequuntur omnis possimus aut tempore sed consectetur fuga eum eum."
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 9,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 10,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Budget = -716829346.0,
                            InstructorID = 1,
                            Name = "Emily Jakubowski",
                            StartDate = new DateTime(2021, 1, 18, 16, 45, 35, 774, DateTimeKind.Local).AddTicks(1178)
                        },
                        new
                        {
                            DepartmentID = 2,
                            Budget = -105976548.0,
                            InstructorID = 2,
                            Name = "Ms. Eloy Weber",
                            StartDate = new DateTime(2021, 1, 18, 16, 45, 35, 775, DateTimeKind.Local).AddTicks(1279)
                        },
                        new
                        {
                            DepartmentID = 3,
                            Budget = -325517875.0,
                            InstructorID = 3,
                            Name = "Rocky Runolfsdottir",
                            StartDate = new DateTime(2021, 1, 18, 16, 45, 35, 775, DateTimeKind.Local).AddTicks(4509)
                        },
                        new
                        {
                            DepartmentID = 4,
                            Budget = -694820541.0,
                            InstructorID = 4,
                            Name = "Thelma McClure",
                            StartDate = new DateTime(2021, 1, 18, 16, 45, 35, 775, DateTimeKind.Local).AddTicks(7930)
                        },
                        new
                        {
                            DepartmentID = 5,
                            Budget = 1186551899.0,
                            InstructorID = 5,
                            Name = "Cathrine Cartwright",
                            StartDate = new DateTime(2021, 1, 18, 16, 45, 35, 776, DateTimeKind.Local).AddTicks(1272)
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = "C",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 4,
                            Grade = "A",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 5,
                            Grade = "A",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseID = 6,
                            Grade = "None",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseID = 7,
                            Grade = "D",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseID = 8,
                            Grade = "C",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseID = 9,
                            Grade = "B",
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseID = 10,
                            Grade = "A",
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "Julien",
                            HireDate = new DateTime(2021, 1, 18, 16, 45, 35, 734, DateTimeKind.Local).AddTicks(4154),
                            LastName = "Nienow"
                        },
                        new
                        {
                            ID = 2,
                            FirstMidName = "Carley",
                            HireDate = new DateTime(2021, 1, 18, 16, 45, 35, 736, DateTimeKind.Local).AddTicks(1811),
                            LastName = "Bernhard"
                        },
                        new
                        {
                            ID = 3,
                            FirstMidName = "Orin",
                            HireDate = new DateTime(2021, 1, 18, 16, 45, 35, 736, DateTimeKind.Local).AddTicks(5184),
                            LastName = "Fritsch"
                        },
                        new
                        {
                            ID = 4,
                            FirstMidName = "Amina",
                            HireDate = new DateTime(2021, 1, 18, 16, 45, 35, 736, DateTimeKind.Local).AddTicks(8670),
                            LastName = "Stoltenberg"
                        },
                        new
                        {
                            ID = 5,
                            FirstMidName = "Mina",
                            HireDate = new DateTime(2021, 1, 18, 16, 45, 35, 737, DateTimeKind.Local).AddTicks(2682),
                            LastName = "Blanda"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");

                    b.HasData(
                        new
                        {
                            InstructorID = 1,
                            Location = "09017 Davis Landing"
                        },
                        new
                        {
                            InstructorID = 2,
                            Location = "551 Brendon Walk"
                        },
                        new
                        {
                            InstructorID = 3,
                            Location = "0107 Effertz Fords"
                        },
                        new
                        {
                            InstructorID = 4,
                            Location = "325 Steuber Lights"
                        },
                        new
                        {
                            InstructorID = 5,
                            Location = "279 Jewess Common"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(1982, 11, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Zelda",
                            LastName = "Harvey"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(2001, 5, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Amira",
                            LastName = "Marvin"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(1968, 12, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Naomie",
                            LastName = "Barton"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(1973, 12, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Ewald",
                            LastName = "Balistreri"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(1971, 7, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Joshuah",
                            LastName = "Rice"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Administator")
                        .WithMany("Departments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administator");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("CourseWebAPI.Entities.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Departments");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
