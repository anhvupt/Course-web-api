// <auto-generated />
using System;
using CourseWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWebAPI.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20210118082644_Relationship")]
    partial class Relationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseCredit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseCredit = -1935164867,
                            DepartmentID = 5,
                            Title = "Laborum in deleniti blanditiis eaque pariatur."
                        },
                        new
                        {
                            ID = 2,
                            CourseCredit = -45201723,
                            DepartmentID = 5,
                            Title = "In qui enim ratione et iusto."
                        },
                        new
                        {
                            ID = 3,
                            CourseCredit = 1540690968,
                            DepartmentID = 4,
                            Title = "Eaque vero velit placeat ab veritatis ea assumenda."
                        },
                        new
                        {
                            ID = 4,
                            CourseCredit = 1530852990,
                            DepartmentID = 4,
                            Title = "Qui accusamus aliquid quibusdam dolorem nihil et ipsa reiciendis exercitationem."
                        },
                        new
                        {
                            ID = 5,
                            CourseCredit = -1537799666,
                            DepartmentID = 3,
                            Title = "Consectetur nam nulla alias assumenda ut nihil beatae quae laborum."
                        },
                        new
                        {
                            ID = 6,
                            CourseCredit = -1048257844,
                            DepartmentID = 3,
                            Title = "Vero necessitatibus natus et dolor odio labore vero quia."
                        },
                        new
                        {
                            ID = 7,
                            CourseCredit = 1265853722,
                            DepartmentID = 2,
                            Title = "Voluptas minus nihil ipsa facere doloremque commodi modi."
                        },
                        new
                        {
                            ID = 8,
                            CourseCredit = 152681762,
                            DepartmentID = 2,
                            Title = "Earum tempora cum atque error ut illo."
                        },
                        new
                        {
                            ID = 9,
                            CourseCredit = -674229058,
                            DepartmentID = 1,
                            Title = "Et et sed qui nesciunt labore."
                        },
                        new
                        {
                            ID = 10,
                            CourseCredit = 396911523,
                            DepartmentID = 1,
                            Title = "Molestiae necessitatibus magnam aut voluptatem dolorem."
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 9,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 10,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Budget = 1486748974.0,
                            InstructorID = 1,
                            Name = "Alanis Lynch",
                            StartDate = new DateTime(2021, 1, 18, 15, 26, 44, 40, DateTimeKind.Local).AddTicks(8978)
                        },
                        new
                        {
                            DepartmentID = 2,
                            Budget = -654048269.0,
                            InstructorID = 2,
                            Name = "Maia Bednar II",
                            StartDate = new DateTime(2021, 1, 18, 15, 26, 44, 41, DateTimeKind.Local).AddTicks(5562)
                        },
                        new
                        {
                            DepartmentID = 3,
                            Budget = -957636820.0,
                            InstructorID = 3,
                            Name = "Miss Glennie Deckow",
                            StartDate = new DateTime(2021, 1, 18, 15, 26, 44, 42, DateTimeKind.Local).AddTicks(247)
                        },
                        new
                        {
                            DepartmentID = 4,
                            Budget = 1626203794.0,
                            InstructorID = 4,
                            Name = "Dudley Connelly",
                            StartDate = new DateTime(2021, 1, 18, 15, 26, 44, 42, DateTimeKind.Local).AddTicks(2523)
                        },
                        new
                        {
                            DepartmentID = 5,
                            Budget = 1121808219.0,
                            InstructorID = 5,
                            Name = "Kiel Tillman",
                            StartDate = new DateTime(2021, 1, 18, 15, 26, 44, 42, DateTimeKind.Local).AddTicks(4796)
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = "C",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 4,
                            Grade = "A",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 5,
                            Grade = "A",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseID = 6,
                            Grade = "None",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseID = 7,
                            Grade = "D",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseID = 8,
                            Grade = "C",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseID = 9,
                            Grade = "B",
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseID = 10,
                            Grade = "A",
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "Laurie",
                            HireDate = new DateTime(2021, 1, 18, 15, 26, 44, 18, DateTimeKind.Local).AddTicks(7902),
                            LastName = "Maggio"
                        },
                        new
                        {
                            ID = 2,
                            FirstMidName = "Gage",
                            HireDate = new DateTime(2021, 1, 18, 15, 26, 44, 20, DateTimeKind.Local).AddTicks(3817),
                            LastName = "Swaniawski"
                        },
                        new
                        {
                            ID = 3,
                            FirstMidName = "Dorothy",
                            HireDate = new DateTime(2021, 1, 18, 15, 26, 44, 20, DateTimeKind.Local).AddTicks(6770),
                            LastName = "Spinka"
                        },
                        new
                        {
                            ID = 4,
                            FirstMidName = "Palma",
                            HireDate = new DateTime(2021, 1, 18, 15, 26, 44, 20, DateTimeKind.Local).AddTicks(9106),
                            LastName = "Keeling"
                        },
                        new
                        {
                            ID = 5,
                            FirstMidName = "Jerrold",
                            HireDate = new DateTime(2021, 1, 18, 15, 26, 44, 21, DateTimeKind.Local).AddTicks(1758),
                            LastName = "Jacobson"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");

                    b.HasData(
                        new
                        {
                            InstructorID = 1,
                            Location = "271 Metz Roads"
                        },
                        new
                        {
                            InstructorID = 2,
                            Location = "261 Fleta Summit"
                        },
                        new
                        {
                            InstructorID = 3,
                            Location = "19785 Waelchi Gateway"
                        },
                        new
                        {
                            InstructorID = 4,
                            Location = "73906 Parker "
                        },
                        new
                        {
                            InstructorID = 5,
                            Location = "46552 Yost Radial"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(1926, 6, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Herman",
                            LastName = "Eichmann"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(1942, 7, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Ebba",
                            LastName = "Rau"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(1922, 5, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Annette",
                            LastName = "Grady"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(1965, 7, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Megane",
                            LastName = "Wuckert"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(1959, 4, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Rubye",
                            LastName = "Wunsch"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Administator")
                        .WithMany("Departments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administator");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("CourseWebAPI.Entities.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Departments");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
