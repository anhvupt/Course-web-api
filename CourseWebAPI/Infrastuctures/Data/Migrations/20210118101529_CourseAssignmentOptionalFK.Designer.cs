// <auto-generated />
using System;
using CourseWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWebAPI.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20210118101529_CourseAssignmentOptionalFK")]
    partial class CourseAssignmentOptionalFK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseCredit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseCredit = -1642574628,
                            DepartmentID = 5,
                            Title = "Dolores est accusantium quis sequi."
                        },
                        new
                        {
                            ID = 2,
                            CourseCredit = -2058733634,
                            DepartmentID = 5,
                            Title = "Vel et ipsam enim consequatur esse fuga voluptatem magni."
                        },
                        new
                        {
                            ID = 3,
                            CourseCredit = -67700769,
                            DepartmentID = 4,
                            Title = "Est vel et nihil."
                        },
                        new
                        {
                            ID = 4,
                            CourseCredit = 2087962723,
                            DepartmentID = 4,
                            Title = "Unde harum consequuntur maiores nulla quo eos neque ducimus."
                        },
                        new
                        {
                            ID = 5,
                            CourseCredit = -436073340,
                            DepartmentID = 3,
                            Title = "Nisi tempora officia cupiditate ipsum qui quidem ipsa accusamus quia."
                        },
                        new
                        {
                            ID = 6,
                            CourseCredit = 1241038854,
                            DepartmentID = 3,
                            Title = "Eligendi ad reprehenderit repellendus possimus."
                        },
                        new
                        {
                            ID = 7,
                            CourseCredit = -257887819,
                            DepartmentID = 2,
                            Title = "Laboriosam excepturi ex perspiciatis ullam et."
                        },
                        new
                        {
                            ID = 8,
                            CourseCredit = 191128364,
                            DepartmentID = 2,
                            Title = "Consequatur quia ut temporibus veritatis ex et."
                        },
                        new
                        {
                            ID = 9,
                            CourseCredit = 1715893102,
                            DepartmentID = 1,
                            Title = "Quidem sed vero consequatur aut ipsa eum sequi ea enim."
                        },
                        new
                        {
                            ID = 10,
                            CourseCredit = 1391028728,
                            DepartmentID = 1,
                            Title = "Iusto maxime aspernatur et voluptatibus sint aut et."
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 9,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 10,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Budget = 1311331862.0,
                            InstructorID = 1,
                            Name = "Oswald Kunde",
                            StartDate = new DateTime(2021, 1, 18, 17, 15, 27, 766, DateTimeKind.Local).AddTicks(6513)
                        },
                        new
                        {
                            DepartmentID = 2,
                            Budget = 1946819015.0,
                            InstructorID = 2,
                            Name = "Triston Borer",
                            StartDate = new DateTime(2021, 1, 18, 17, 15, 27, 767, DateTimeKind.Local).AddTicks(2317)
                        },
                        new
                        {
                            DepartmentID = 3,
                            Budget = 616479184.0,
                            InstructorID = 3,
                            Name = "Tobin Cummings Sr.",
                            StartDate = new DateTime(2021, 1, 18, 17, 15, 27, 768, DateTimeKind.Local).AddTicks(1414)
                        },
                        new
                        {
                            DepartmentID = 4,
                            Budget = -1398828057.0,
                            InstructorID = 4,
                            Name = "Ralph Waters",
                            StartDate = new DateTime(2021, 1, 18, 17, 15, 27, 768, DateTimeKind.Local).AddTicks(5010)
                        },
                        new
                        {
                            DepartmentID = 5,
                            Budget = 1247451781.0,
                            InstructorID = 5,
                            Name = "Bernita Hettinger",
                            StartDate = new DateTime(2021, 1, 18, 17, 15, 27, 768, DateTimeKind.Local).AddTicks(7627)
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseID = 1,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseID = 2,
                            Grade = "None",
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseID = 3,
                            Grade = "C",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseID = 4,
                            Grade = "A",
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseID = 5,
                            Grade = "A",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseID = 6,
                            Grade = "None",
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseID = 7,
                            Grade = "D",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseID = 8,
                            Grade = "C",
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseID = 9,
                            Grade = "B",
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseID = 10,
                            Grade = "A",
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstMidName = "Bella",
                            HireDate = new DateTime(2021, 1, 18, 17, 15, 27, 739, DateTimeKind.Local).AddTicks(4913),
                            LastName = "Russel"
                        },
                        new
                        {
                            ID = 2,
                            FirstMidName = "Harvey",
                            HireDate = new DateTime(2021, 1, 18, 17, 15, 27, 741, DateTimeKind.Local).AddTicks(5),
                            LastName = "Zulauf"
                        },
                        new
                        {
                            ID = 3,
                            FirstMidName = "Rene",
                            HireDate = new DateTime(2021, 1, 18, 17, 15, 27, 741, DateTimeKind.Local).AddTicks(3398),
                            LastName = "Stracke"
                        },
                        new
                        {
                            ID = 4,
                            FirstMidName = "Eloisa",
                            HireDate = new DateTime(2021, 1, 18, 17, 15, 27, 741, DateTimeKind.Local).AddTicks(6534),
                            LastName = "Braun"
                        },
                        new
                        {
                            ID = 5,
                            FirstMidName = "Kassandra",
                            HireDate = new DateTime(2021, 1, 18, 17, 15, 27, 741, DateTimeKind.Local).AddTicks(9979),
                            LastName = "Ruecker"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("OfficeAssignments");

                    b.HasData(
                        new
                        {
                            InstructorID = 1,
                            Location = "31899 Jayson Brook"
                        },
                        new
                        {
                            InstructorID = 2,
                            Location = "752 Marian Inlet"
                        },
                        new
                        {
                            InstructorID = 3,
                            Location = "02906 Marvin Trace"
                        },
                        new
                        {
                            InstructorID = 4,
                            Location = "8868 Stehr Course"
                        },
                        new
                        {
                            InstructorID = 5,
                            Location = "75702 Angelica Plains"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(1974, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Avery",
                            LastName = "Okuneva"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(2003, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Ephraim",
                            LastName = "Schulist"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(1921, 4, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Michele",
                            LastName = "Littel"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(1985, 4, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Kelton",
                            LastName = "Dooley"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(2001, 2, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstMidName = "Elta",
                            LastName = "Sipes"
                        });
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.CourseAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Administator")
                        .WithMany("Departments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administator");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Enrollment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWebAPI.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.OfficeAssignment", b =>
                {
                    b.HasOne("CourseWebAPI.Entities.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("CourseWebAPI.Entities.OfficeAssignment", "InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Department", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Departments");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("CourseWebAPI.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
